<problem display_name="Wait-notify" markdown="&gt;&gt;Какой принцип работы wait-notify?&lt;&lt;&#10;     (x) Когда происходит wait для потока, его контекст выполнения сохраняется и выгружается, после выполнится notify для того же объекта синхронизации контекст cнова загружается в буфер и продолжает свое выполнение&#10;     ( ) Когда происходит wait для объекта синхронизации, все потоки использующие и выполняющие блок кода, который синхронизирован этим объектом, сохраняют свой контекст выполнения и выгружаются из памяти, после выполнения notify - эти потоки продолжают свое выполнение&#10;     ( ) После выполение wait для потока, он выполняет запрос на разрешение продолжать работу от другого потока (управляющего), после чего или выгружает свой контекст выполнения или продолжает свою работу (вариант notify или notifyAll)" max_attempts="2" showanswer="never">
  <p>Какой принцип работы wait-notify?</p>
  <multiplechoiceresponse>
    <choicegroup label="Какой принцип работы wait-notify?" type="MultipleChoice">
      <choice correct="true">Когда происходит wait для потока, его контекст выполнения сохраняется и выгружается, после выполнится notify для того же объекта синхронизации контекст cнова загружается в буфер и продолжает свое выполнение</choice>
      <choice correct="false">Когда происходит wait для объекта синхронизации, все потоки использующие и выполняющие блок кода, который синхронизирован этим объектом, сохраняют свой контекст выполнения и выгружаются из памяти, после выполнения notify - эти потоки продолжают свое выполнение</choice>
      <choice correct="false">После выполение wait для потока, он выполняет запрос на разрешение продолжать работу от другого потока (управляющего), после чего или выгружает свой контекст выполнения или продолжает свою работу (вариант notify или notifyAll)</choice>
    </choicegroup>
  </multiplechoiceresponse>
</problem>
